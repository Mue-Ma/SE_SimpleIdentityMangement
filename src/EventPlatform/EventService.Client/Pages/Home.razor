@page "/"

@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization

@inject IEventService EventService

@attribute [AllowAnonymous]

<PageTitle>EventService</PageTitle>

<h1>EventOverview</h1>
<CascadingValue Value="@_events" Name="Events">
    <EventFilter EventsChanged="FilterHandler"></EventFilter>
    <ErrorBoundary @ref="_errorBoundary">
        <ChildContent>
            <EventTable></EventTable>
        </ChildContent>
        <ErrorContent>
            <p class="my-custom-class">No events found</p>
        </ErrorContent>
    </ErrorBoundary>
</CascadingValue>

<CreateEventButton></CreateEventButton>

@code {

    private IEnumerable<Event> _events = new List<Event>();
    private ErrorBoundary? _errorBoundary;

    protected override async Task OnInitializedAsync()
    {
        _events = await EventService.GetEvents();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        _errorBoundary?.Recover();
    }

    private void FilterHandler(IEnumerable<Event> events)
    {
        _events = events;
    }
}
