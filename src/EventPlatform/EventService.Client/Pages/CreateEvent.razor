@page "/CreateEvent"
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using EventService.Client.Models

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider GetAuthenticationStateAsync

<AuthorizeView Roles="Admin" Context="AdminAuthorizeContext">

    <h1>Create a new Event</h1>
    <EditForm Model="@eventObject" OnValidSubmit="@HandleEventCreation">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="Name">Name</label>
            <InputText id="Name" class="form-control" @bind-Value="eventObject.Name" />
        </div>

        <div class="form-group">
            <label for="StartDate">Start Date</label>
            <InputDate Type="InputDateType.DateTimeLocal" @bind-Value:format="dd/MM/yyyy hh:mm:ss" @bind-Value="eventObject.StartDate" />
        </div>

        <div class="form-group">
            <label for="EndDate">End Date</label>
            <InputDate Type="InputDateType.DateTimeLocal" @bind-Value:format="dd/MM/yyyy hh:mm:ss" @bind-Value="eventObject.EndDate" />
        </div>

        <div class="form-group">
            <label for="Description">Description</label>
            <InputText id="Name" class="form-control" @bind-Value="eventObject.Description" />
        </div>

        <button type="submit">Submit</button>
    </EditForm>
</AuthorizeView>

@code {
    private Event eventObject = new Event();
    private async Task HandleEventCreation()
    {
        var response = await Http.PostAsJsonAsync("http://localhost/eventservice/Event", eventObject);
        if (!response.IsSuccessStatusCode)
        {
            string errorMessage = $"Error: {response.StatusCode}";
            NavigationManager.NavigateTo($"/ErrorPages/ErrorPage?message={Uri.EscapeDataString(errorMessage)}");
        }

        NavigationManager.NavigateTo("/");
    }
}
