@inject NavigationManager NavigationManager
@inject IEventService EventService

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>StartDate</th>
            <th>EndDate</th>
            <th>Description</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var eventObject in Events)
        {
            <tr>
                <td>@eventObject.Name</td>
                <td>@eventObject.StartDate</td>
                <td>@eventObject.EndDate</td>
                <td>@eventObject.Description</td>
                <td><EventDetailButton EventId="eventObject.Id" EventIdsOfUser="_userEventIds"></EventDetailButton></td>
            </tr>
        }
    </tbody>
</table>

@code {
    private IEnumerable<Event> _events = [];
    private List<Guid> _userEventIds =[];

    [CascadingParameter(Name = "Events")]
    public IEnumerable<Event> Events
    {
        get { return _events; }
        set
        {
            if (!value.Any())
            {
                throw new Exception("");
            }

            _events = value;

        }
    }

    protected override async Task OnInitializedAsync()
    {
        _userEventIds = (await EventService.GetSubscriptionsByIdentity()).Select(x => x.EventId).ToList();
    }
}
